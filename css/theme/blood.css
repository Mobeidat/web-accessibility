/**
 * Blood theme for reveal.js
 * Author: Walther http://github.com/Walther
 *
 * Designed to be used with highlight.js theme
 * "monokai_sublime.css" available from
 * https://github.com/isagalaev/highlight.js/
 *
 * For other themes, change $codeBackground accordingly.
 *
 */
@import url(https://fonts.googleapis.com/css?family=Ubuntu:300,700,300italic,700italic);
/*********************************************
 * GLOBAL STYLES
 *********************************************/
body {
  background: #222;
  background-color: #222; }

.reveal {
  font-family: Ubuntu, "sans-serif";
  font-size: 36px;
  font-weight: normal;
  color: #eee; }

::selection {
  color: #fff;
  background: #ab9258;
  text-shadow: none; }

.reveal .slides > section,
.reveal .slides > section > section {
  line-height: 1.3;
  font-weight: inherit; }

/*********************************************
 * HEADERS
 *********************************************/
.reveal h1,
.reveal h2,
.reveal h3,
.reveal h4,
.reveal h5,
.reveal h6 {
  margin: 0 0 20px 0;
  color: #eee;
  font-family: Ubuntu, "sans-serif";
  font-weight: normal;
  line-height: 1.2;
  letter-spacing: normal;
  text-transform: uppercase;
  text-shadow: 2px 2px 2px #222;
  word-wrap: break-word; }

.reveal h1 {
  font-size: 3.4em; }

.reveal h2 {
  font-size: 1.89em; }

.reveal h3 {
  font-size: 1.55em; }

.reveal h4 {
  font-size: 1em; }

.reveal h1 {
  text-shadow: 0 1px 0 #ccc, 0 2px 0 #c9c9c9, 0 3px 0 #bbb, 0 4px 0 #b9b9b9, 0 5px 0 #aaa, 0 6px 1px rgba(0, 0, 0, 0.1), 0 0 5px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.3), 0 3px 5px rgba(0, 0, 0, 0.2), 0 5px 10px rgba(0, 0, 0, 0.25), 0 20px 20px rgba(0, 0, 0, 0.15); }

/*********************************************
 * OTHER
 *********************************************/
.reveal p {
  margin: 20px 0;
  line-height: 1.3; }

/* Ensure certain elements are never larger than the slide itself */
.reveal img,
.reveal video,
.reveal iframe {
  max-width: 95%;
  max-height: 95%; }

.reveal strong,
.reveal b {
  font-weight: bold; }

.reveal em {
  font-style: italic; }

.reveal ol,
.reveal dl,
.reveal ul {
  display: inline-block;
  text-align: left;
  margin: 0 0 0 1em; }

.reveal ol {
  list-style-type: decimal; }

.reveal ul {
  list-style-type: disc; }

.reveal ul ul {
  list-style-type: square; }

.reveal ul ul ul {
  list-style-type: circle; }

.reveal ul ul,
.reveal ul ol,
.reveal ol ol,
.reveal ol ul {
  display: block;
  margin-left: 40px; }

.reveal dt {
  font-weight: bold; }

.reveal dd {
  margin-left: 40px; }

.reveal q,
.reveal blockquote {
  quotes: none; }

.reveal blockquote {
  display: block;
  position: relative;
  width: 70%;
  margin: 20px auto;
  padding: 5px;
  font-style: italic;
  background: rgba(255, 255, 255, 0.05);
  box-shadow: 0px 0px 2px rgba(0, 0, 0, 0.2); }

.reveal blockquote p:first-child,
.reveal blockquote p:last-child {
  display: inline-block; }

.reveal q {
  font-style: italic; }

.reveal pre {
  display: block;
  position: relative;
  width: 90%;
  margin: 20px auto;
  text-align: left;
  font-size: 0.55em;
  font-family: monospace;
  line-height: 1.2em;
  word-wrap: break-word;
  box-shadow: 0px 0px 6px rgba(0, 0, 0, 0.3); }

.reveal code {
  font-family: monospace; }

.reveal pre code {
  display: block;
  padding: 5px;
  overflow: auto;
  max-height: 400px;
  word-wrap: normal; }

.reveal table {
  margin: auto;
  border-collapse: collapse;
  border-spacing: 0; }

.reveal table th {
  font-weight: bold; }

.reveal table th,
.reveal table td {
  text-align: left;
  padding: 0.2em 0.5em 0.2em 0.5em;
  border-bottom: 1px solid; }

.reveal table th[align="center"],
.reveal table td[align="center"] {
  text-align: center; }

.reveal table th[align="right"],
.reveal table td[align="right"] {
  text-align: right; }

.reveal table tbody tr:last-child th,
.reveal table tbody tr:last-child td {
  border-bottom: none; }

.reveal sup {
  vertical-align: super; }

.reveal sub {
  vertical-align: sub; }

.reveal small {
  display: inline-block;
  font-size: 0.6em;
  line-height: 1.2em;
  vertical-align: top; }

.reveal small * {
  vertical-align: top; }

/*********************************************
 * LINKS
 *********************************************/
.reveal a {
  color: #ab9258;
  text-decoration: none;
  -webkit-transition: color .15s ease;
  -moz-transition: color .15s ease;
  transition: color .15s ease; }

.reveal a:hover {
  color: #cdbe9c;
  text-shadow: none;
  border: none; }

.reveal .roll span:after {
  color: #fff;
  background: #79673d; }

/*********************************************
 * IMAGES
 *********************************************/
.reveal section img {
  margin: 15px 0px;
  background: rgba(255, 255, 255, 0.12);
  border: 4px solid #eee;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.15); }

.reveal section img.plain {
  border: 0;
  box-shadow: none; }

.reveal a img {
  -webkit-transition: all .15s linear;
  -moz-transition: all .15s linear;
  transition: all .15s linear; }

.reveal a:hover img {
  background: rgba(255, 255, 255, 0.2);
  border-color: #ab9258;
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.55); }

/*********************************************
 * NAVIGATION CONTROLS
 *********************************************/
.reveal .controls .navigate-left,
.reveal .controls .navigate-left.enabled {
  border-right-color: #ab9258; }

.reveal .controls .navigate-right,
.reveal .controls .navigate-right.enabled {
  border-left-color: #ab9258; }

.reveal .controls .navigate-up,
.reveal .controls .navigate-up.enabled {
  border-bottom-color: #ab9258; }

.reveal .controls .navigate-down,
.reveal .controls .navigate-down.enabled {
  border-top-color: #ab9258; }

.reveal .controls .navigate-left.enabled:hover {
  border-right-color: #cdbe9c; }

.reveal .controls .navigate-right.enabled:hover {
  border-left-color: #cdbe9c; }

.reveal .controls .navigate-up.enabled:hover {
  border-bottom-color: #cdbe9c; }

.reveal .controls .navigate-down.enabled:hover {
  border-top-color: #cdbe9c; }

/*********************************************
 * PROGRESS BAR
 *********************************************/
.reveal .progress {
  background: rgba(0, 0, 0, 0.2); }

.reveal .progress span {
  background: #ab9258;
  -webkit-transition: width 800ms cubic-bezier(0.26, 0.86, 0.44, 0.985);
  -moz-transition: width 800ms cubic-bezier(0.26, 0.86, 0.44, 0.985);
  transition: width 800ms cubic-bezier(0.26, 0.86, 0.44, 0.985); }

.reveal p {
  font-weight: 300;
  text-shadow: 1px 1px #222; }

.reveal .big-p {
  font-size: 45px; }

.reveal h1,
.reveal h2,
.reveal h3,
.reveal h4,
.reveal h5,
.reveal h6 {
  font-weight: 700; }

.reveal p code {
  background-color: #121210;
  display: inline-block;
  border-radius: 7px; }

.reveal small code {
  vertical-align: baseline; }

.underline {
  text-decoration: underline; }

/* Our mixin positions a copy of our text
directly on our existing text, while
also setting content to the appropriate
text set in the data-text attribute. */
.glitch {
  position: relative;
  color: white;
  font-size: 4em;
  letter-spacing: .5em;
  /* Animation provies a slight random skew. Check bottom of doc
	for more information on how to random skew. */
  animation: glitch-skew 1s infinite linear alternate-reverse; }
  .glitch::before {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    left: 2px;
    text-shadow: -2px 0 #ff00c1;
    /* Creates an initial clip for our glitch. This works in
		a typical top,right,bottom,left fashion and creates a mask
		to only show a certain part of the glitch at a time. */
    clip: rect(44px, 450px, 56px, 0);
    /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
		with an alternating animation to keep things fresh. */
    animation: glitch-anim 5s infinite linear alternate-reverse; }
  .glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    left: -2px;
    text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
    animation: glitch-anim2 1s infinite linear alternate-reverse; }

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  0% {
    clip: rect(53px, 9999px, 56px, 0);
    transform: skew(0.15deg); }
  5% {
    clip: rect(61px, 9999px, 84px, 0);
    transform: skew(0.83deg); }
  10% {
    clip: rect(97px, 9999px, 38px, 0);
    transform: skew(0.36deg); }
  15% {
    clip: rect(68px, 9999px, 85px, 0);
    transform: skew(0.89deg); }
  20% {
    clip: rect(25px, 9999px, 48px, 0);
    transform: skew(0.33deg); }
  25% {
    clip: rect(28px, 9999px, 36px, 0);
    transform: skew(0.19deg); }
  30% {
    clip: rect(68px, 9999px, 12px, 0);
    transform: skew(0.46deg); }
  35% {
    clip: rect(64px, 9999px, 100px, 0);
    transform: skew(0.7deg); }
  40% {
    clip: rect(56px, 9999px, 99px, 0);
    transform: skew(0.61deg); }
  45% {
    clip: rect(24px, 9999px, 97px, 0);
    transform: skew(0.26deg); }
  50% {
    clip: rect(95px, 9999px, 4px, 0);
    transform: skew(0.24deg); }
  55% {
    clip: rect(44px, 9999px, 13px, 0);
    transform: skew(0.13deg); }
  60% {
    clip: rect(84px, 9999px, 67px, 0);
    transform: skew(0.37deg); }
  65% {
    clip: rect(13px, 9999px, 52px, 0);
    transform: skew(0.7deg); }
  70% {
    clip: rect(41px, 9999px, 81px, 0);
    transform: skew(0.71deg); }
  75% {
    clip: rect(65px, 9999px, 72px, 0);
    transform: skew(0.4deg); }
  80% {
    clip: rect(16px, 9999px, 95px, 0);
    transform: skew(0.59deg); }
  85% {
    clip: rect(8px, 9999px, 19px, 0);
    transform: skew(0.56deg); }
  90% {
    clip: rect(87px, 9999px, 91px, 0);
    transform: skew(0.46deg); }
  95% {
    clip: rect(59px, 9999px, 95px, 0);
    transform: skew(0.22deg); }
  100% {
    clip: rect(58px, 9999px, 20px, 0);
    transform: skew(0.33deg); } }

@keyframes glitch-anim2 {
  0% {
    clip: rect(82px, 9999px, 11px, 0);
    transform: skew(0.77deg); }
  5% {
    clip: rect(4px, 9999px, 50px, 0);
    transform: skew(0.23deg); }
  10% {
    clip: rect(97px, 9999px, 10px, 0);
    transform: skew(0.2deg); }
  15% {
    clip: rect(98px, 9999px, 16px, 0);
    transform: skew(0.9deg); }
  20% {
    clip: rect(90px, 9999px, 29px, 0);
    transform: skew(0.36deg); }
  25% {
    clip: rect(18px, 9999px, 50px, 0);
    transform: skew(0.43deg); }
  30% {
    clip: rect(37px, 9999px, 72px, 0);
    transform: skew(0.69deg); }
  35% {
    clip: rect(70px, 9999px, 6px, 0);
    transform: skew(0.2deg); }
  40% {
    clip: rect(88px, 9999px, 68px, 0);
    transform: skew(0.27deg); }
  45% {
    clip: rect(73px, 9999px, 39px, 0);
    transform: skew(0.6deg); }
  50% {
    clip: rect(29px, 9999px, 84px, 0);
    transform: skew(0.36deg); }
  55% {
    clip: rect(67px, 9999px, 32px, 0);
    transform: skew(0.03deg); }
  60% {
    clip: rect(59px, 9999px, 49px, 0);
    transform: skew(0.09deg); }
  65% {
    clip: rect(76px, 9999px, 40px, 0);
    transform: skew(0.88deg); }
  70% {
    clip: rect(66px, 9999px, 93px, 0);
    transform: skew(0.58deg); }
  75% {
    clip: rect(78px, 9999px, 70px, 0);
    transform: skew(0.71deg); }
  80% {
    clip: rect(13px, 9999px, 59px, 0);
    transform: skew(0.67deg); }
  85% {
    clip: rect(3px, 9999px, 85px, 0);
    transform: skew(0.56deg); }
  90% {
    clip: rect(22px, 9999px, 24px, 0);
    transform: skew(0.55deg); }
  95% {
    clip: rect(72px, 9999px, 53px, 0);
    transform: skew(0.56deg); }
  100% {
    clip: rect(40px, 9999px, 48px, 0);
    transform: skew(0.99deg); } }

@keyframes glitch-skew {
  0% {
    transform: skew(3deg); }
  10% {
    transform: skew(-1deg); }
  20% {
    transform: skew(-3deg); }
  30% {
    transform: skew(-1deg); }
  40% {
    transform: skew(-2deg); }
  50% {
    transform: skew(0deg); }
  60% {
    transform: skew(2deg); }
  70% {
    transform: skew(5deg); }
  80% {
    transform: skew(4deg); }
  90% {
    transform: skew(2deg); }
  100% {
    transform: skew(5deg); } }
